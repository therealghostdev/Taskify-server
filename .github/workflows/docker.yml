name: build & deploy docker image

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get the latest version
        id: get_version
        run: |
          CURRENT_VERSION=$(docker inspect --format '{{ index .RepoTags 0 }}' therealghostdev/taskify | sed 's/.*://')
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          echo "::set-output name=new_version::$NEW_VERSION"
        shell: bash

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            therealghostdev/taskify:latest
            therealghostdev/taskify:${{ steps.get_version.outputs.new_version }}




#   deploy:
#     runs-on: ubuntu-latest
#     needs: [build, test]
#     steps:
#       - name: Deploy to Production
#         run: |
#           echo "Deploying to production server"
