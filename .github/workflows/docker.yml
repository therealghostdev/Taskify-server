name: build & deploy docker image

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull latest Docker image
        run: |
          docker pull therealghostdev/taskify:latest || true

      - name: Get the latest version
        id: get_version
        run: |
          # Get the latest version from Docker Hub (if available)
          CURRENT_VERSION=$(docker inspect --format='{{index .RepoTags 0}}' therealghostdev/taskify:latest 2>/dev/null | sed 's/.*://')
          if [ -z "$CURRENT_VERSION" ]; then
            # If no current version, start at 1.0
            NEW_VERSION="1.0"
          else
            # Increment the version
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          fi
          echo "::set-output name=new_version::$NEW_VERSION"

      - name: Build Docker image
        run: |
          docker build -t therealghostdev/taskify:latest .

      - name: Tag the new version
        run: |
          docker tag therealghostdev/taskify:latest therealghostdev/taskify:${{ steps.get_version.outputs.new_version }}

      - name: Push the Docker images
        run: |
          docker push therealghostdev/taskify:latest
          docker push therealghostdev/taskify:${{ steps.get_version.outputs.new_version }}
